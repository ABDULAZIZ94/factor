version: 2.1

executors:
  node:
    parameters:
      browsers:
        type: boolean
        default: false
    docker:
      - image: circleci/node:latest<<# parameters.browsers >>-browsers<</ parameters.browsers >>
    working_directory: ~/project
    environment:
      NODE_ENV: test
      NODE_OPTIONS: --max_old_space_size=8192

commands:
  attach-project:
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
  store-test-results:
    steps:
      - store_test_results:
          path: reports/junit
  release:
    steps:
      - attach-project
      - run:
          name: release
          command: |
            if [ -z "$COMMIT_MSG" ]; then
              COMMIT_MSG=$(git --no-pager log --pretty=full -n1 $CIRCLE_SHA1)
            fi
            if echo "$COMMIT_MSG" | grep -o "\[release\]"; then
              git config --global user.email "$GIT_AUTHOR_EMAIL"
              git config --global user.name "$GIT_AUTHOR_NAME"
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              echo "//registry.yarnpkg.com/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              yarn lerna publish patch --yes
            else
              echo "Release phase is skipped."
            fi
release_branches: &release_branches
  branches:
    only:
      - master
      - release

jobs:
  # --------------------------------------------------------------------------
  # Phase 1: Setup
  # --------------------------------------------------------------------------
  setup:
    executor: node
    steps:
      # Checkout repository
      - checkout

      # Restore cache
      - restore_cache:
          key: lock-{{ checksum "yarn.lock" }}

      # Install dependencies
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile --non-interactive

      # Save cache
      - save_cache:
          key: lock-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - "@factor/*/node_modules"

      # Persist workspace
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - "@factor/*/node_modules"
            - "@factor/*/dist"

  # --------------------------------------------------------------------------
  # Phase 2: Lint + Audit + Build
  # --------------------------------------------------------------------------
  lint:
    executor: node
    steps:
      - attach-project
      - run:
          name: Lint
          command: yarn test:lint

  audit:
    executor: node
    steps:
      - attach-project
      - run:
          name: Security Audit
          command: yarn audit || true

  build:
    parallelism: 4
    executor: node
    steps:
      - attach-project
      - run:
          name: Build Fixtures
          command: yarn test:builds --collectCoverage && yarn test:coverage --forceExit builds
          environment:
            JEST_JUNIT_OUTPUT_NAME: builds.xml
      - store-test-results
      - persist_to_workspace:
          root: ~/project
          paths:
            - test/builds

  test-integration:
    parallelism: 4
    executor: node
    steps:
      - attach-project
      - run:
          name: Integration Tests
          command: yarn test:integration --collectCoverage && yarn test:coverage --forceExit integration
          environment:
            JEST_JUNIT_OUTPUT_NAME: integration.xml
      - store-test-results

  # --------------------------------------------------------------------------
  # Phase 3: Unit and E2E tests
  # --------------------------------------------------------------------------
  test-unit:
    parallelism: 4
    executor: node
    steps:
      - attach-project
      - run:
          name: Unit Tests
          command: yarn test:unit -maxWorkers=4 --collectCoverage && yarn test:coverage --forceExit unit
          environment:
            JEST_JUNIT_OUTPUT_NAME: unit.xml
      - store-test-results

  # --------------------------------------------------------------------------
  # Phase 4: Release (dev branch only)
  # --------------------------------------------------------------------------
  release-commit:
    executor: node
    steps:
      - release

  release-nightly:
    executor: node
    steps:
      - release
    environment:
      COMMIT_MSG: "[release]"

# Workflow definition
workflows:
  version: 2

  # Build and test after each commit
  # Manually release on release branches -
  commit:
    jobs:
      - setup
      - lint: { requires: [setup] }
      - audit: { requires: [setup] }
      - test-unit: { requires: [setup] }
      - build: { requires: [setup] }
      - test-integration: { requires: [build] }
      - release-commit:
          requires: [build, lint, audit, test-unit, test-integration]
          filters:
            <<: *release_branches
